=============
Docker
=============

.. highlight:: sh

OpenTAXII can also be run using docker. This guide assumes that you have access to a local or remote docker server, and won't go into the setup of docker.

To get a default (development) instance using docker


.. code-block:: shell

    docker run -d -p 9000:9000 intelworks/opentaxii

.. note::

    OpenTAXII is now accessible through port 9000, and is not configured.

Extending
====================

A better way using the OpenTAXII docker image, is to extend it, and create the custom configuration on startup. An example of is can be found `examples/Dockerfile <https://raw.githubusercontent.com/Intelworks/OpenTAXII/master/examples/Dockerfile>`_. Here the the configuration is replaced by an instance using MySQL.

.. code-block:: docker

  FROM intelworks/opentaxii:latest
  MAINTAINER code040@intelworks.com

  RUN pip install mysql-python

  COPY services.yml /services.yml
  COPY collections.yml /collections.yml
  COPY docker-entrypoint.sh /entrypoint.sh

  ENV OPENTAXII_AUTH_SECRET "SOME SECRET"
  ENV OPENTAXII_DOMAIN "localhost:9000"
  ENV OPENTAXII_USER ""
  ENV OPENTAXII_PASS ""
  ENV DB_USER  ""
  ENV DB_PASS  ""
  ENV DB_NAME  ""
  ENV DB_HOST  ""
  ENV DB_PORT  ""

  ENTRYPOINT ["./entrypoint.sh"]
  CMD [ "supervisord","-c","/supervisord.conf" ]


Using this configuration it is possible to add a new `/opentaxii.yml` configuration, which in this case is generated by the `entrypoint.sh` script. Furthermore it adds the example `services.yml` and `collections.yml` to the image.

To see this in action, you can use the `docker-compose <https://docs.docker.com/compose/>`_ tool to run a complete working setup using mysql. The configuration is located at: `examples/docker-compose.yml <https://raw.githubusercontent.com/Intelworks/OpenTAXII/master/examples/docker-compose.yml>`_

.. code-block:: yaml

    db:
      image: mysql
      environment:
        MYSQL_USER: user
        MYSQL_PASSWORD: password
        MYSQL_DATABASE: opentaxii
        MYSQL_ROOT_PASSWORD: pass
      ports:
        - 3306:3306

    opentaxii:
      build: .
      environment:
        OPENTAXII_AUTH_SECRET: secret
        OPENTAXII_DOMAIN: localhost:9000
        OPENTAXII_USER: user1
        OPENTAXII_PASS: pass1
        DB_HOST: db
        DB_PORT: 3306
        DB_NAME: opentaxii
        DB_USER: user
        DB_PASS: password
      ports:
        - 9000:9000
      links:
        - db:db

This configuration starts two containers: 'opentaxii' and 'mysql', creates the given collections and services, and adds a user for authentication.


.. rubric:: Next steps

Continue to :doc:`Authentication <auth>` page to learn how OpenTAXII authentication process works.



.. vim: set spell spelllang=en:
